CLASS net/minecraft/unmapped/C_nyagoaau net/minecraft/recipe/RecipeMatcher
	COMMENT Matching class that matches a recipe to its required resources.
	COMMENT This specifically does not check patterns (See {@link ShapedRecipe} for that).
	FIELD f_cxuctkqu inputs Lit/unimi/dsi/fastutil/ints/Int2IntMap;
	FIELD f_npqyxlgw EMPTY I
	METHOD m_bnaweqbp match (Lnet/minecraft/unmapped/C_awrmdwqd;Lit/unimi/dsi/fastutil/ints/IntList;)Z
		COMMENT Attempts to match the recipe against the collected inputs.
		COMMENT Assumes only one output is required.
		ARG 1 recipe
			COMMENT the recipe to match against
		ARG 2 output
			COMMENT optional output list of item ids that were matched whilst evaluating the recipe conditions
	METHOD m_gdjqbhqu addUnenchantedInput (Lnet/minecraft/unmapped/C_sddaxwyk;)V
		COMMENT Adds a full item stack to the pool of available resources.
		COMMENT <p>
		COMMENT This is equivalent to calling {@code addInput(stack, Item.DEFAULT_MAX_COUNT)}.</p>
		ARG 1 stack
	METHOD m_gzljfuky getStackFromId (I)Lnet/minecraft/unmapped/C_sddaxwyk;
		ARG 0 itemId
	METHOD m_hzrnwima countCrafts (Lnet/minecraft/unmapped/C_awrmdwqd;Lit/unimi/dsi/fastutil/ints/IntList;)I
		COMMENT Determines the number of crafts that can be produced for a recipe using the
		COMMENT collected resources available to this crafter.
		ARG 1 recipe
			COMMENT the recipe to match against
		ARG 2 output
			COMMENT optional output list of item ids that were matched whilst evaluating the recipe conditions
	METHOD m_igrbdbak addInput (Lnet/minecraft/unmapped/C_sddaxwyk;I)V
		COMMENT Adds an item stack to the pool of available resources.
		ARG 1 stack
		ARG 2 maxCount
	METHOD m_ilmcgbtf clear ()V
	METHOD m_ixnaievy match (Lnet/minecraft/unmapped/C_awrmdwqd;Lit/unimi/dsi/fastutil/ints/IntList;I)Z
		COMMENT Attempts to match the recipe against the collected inputs. Will only succeed if there has been enough
		COMMENT resources gathered to produce the requested number of outputs.
		ARG 1 recipe
			COMMENT the recipe to match against
		ARG 2 output
			COMMENT optional output list of item ids that were matched whilst evaluating the recipe conditions
		ARG 3 multiplier
			COMMENT the number of expected outputs
	METHOD m_mspiqvig contains (I)Z
		COMMENT Determines whether a raw item id is present in the pool of crafting resources.
		ARG 1 itemId
	METHOD m_okheizlq consume (II)I
		COMMENT Consumes a resource from the pool of available items.
		ARG 1 itemId
			COMMENT the raw id of the item being consumed
		ARG 2 count
			COMMENT the number of times that item must be consumed
	METHOD m_wkrwvzbp addInput (II)V
		COMMENT Adds an input to be used for recipe matching.
		ARG 1 itemId
			COMMENT the raw ID of the item to match
		ARG 2 count
			COMMENT the item's count
	METHOD m_xqjjggdc countCrafts (Lnet/minecraft/unmapped/C_awrmdwqd;ILit/unimi/dsi/fastutil/ints/IntList;)I
		COMMENT Determines the number of crafts that can be produced for a recipe using the
		COMMENT collected resources available to this crafter.
		ARG 1 recipe
			COMMENT the recipe to match against
		ARG 2 limit
		ARG 3 output
			COMMENT optional output list of item ids that were matched whilst evaluating the recipe conditions
	METHOD m_ygiuixjw addInput (Lnet/minecraft/unmapped/C_sddaxwyk;)V
		COMMENT Adds a full item stack to the pool of available resources.
		COMMENT <p>
		COMMENT This is equivalent to calling {@code addInput(stack, Item.DEFAULT_MAX_COUNT)}.</p>
		ARG 1 stack
	METHOD m_zcvpgllk getItemId (Lnet/minecraft/unmapped/C_sddaxwyk;)I
		ARG 0 stack
	CLASS C_tvjqrchc Matcher
		FIELD f_bjsngxdw totalIngredients I
		FIELD f_csjnvinn requiredItems [I
		FIELD f_ctzeokob requirementsMatrix Ljava/util/BitSet;
		FIELD f_kclymipu totalRequiredItems I
		FIELD f_rfepekqo recipe Lnet/minecraft/unmapped/C_awrmdwqd;
		FIELD f_uifobfbp ingredients Ljava/util/List;
		FIELD f_wkisrowc ingredientItemLookup Lit/unimi/dsi/fastutil/ints/IntList;
		METHOD <init> (Lnet/minecraft/unmapped/C_nyagoaau;Lnet/minecraft/unmapped/C_awrmdwqd;)V
			ARG 1 recipe
		METHOD m_bjscespa match (ILit/unimi/dsi/fastutil/ints/IntList;)Z
			ARG 1 multiplier
			ARG 2 output
		METHOD m_fdhmhzif getRequirementIndex (ZI)I
			ARG 1 reversed
			ARG 2 itemId
		METHOD m_lavktivv isRequirementUnfulfilled (ZI)Z
			ARG 1 reversed
			ARG 2 itemId
		METHOD m_lmstygqg unfulfillRequirement (I)V
			ARG 1 itemId
		METHOD m_msnbgbjq checkRequirements (I)Z
			ARG 1 multiplier
		METHOD m_otmvcbma createItemRequirementList ()[I
		METHOD m_oxrukgsb needsRequirement (ZII)Z
			ARG 1 reversed
			ARG 2 itemIndex
			ARG 3 ingredientIndex
		METHOD m_pgaryxqb checkRequirement (ZII)Z
			ARG 1 reversed
			ARG 2 itemIndex
			ARG 3 ingredientIndex
		METHOD m_rkljcmmb addRequirement (ZI)V
			ARG 1 reversed
			ARG 2 itemId
		METHOD m_sflzcccd flipRequirement (ZII)V
			ARG 1 reversed
			ARG 2 itemIndex
			ARG 3 ingredientIndex
		METHOD m_ushjqgji countCrafts (ILit/unimi/dsi/fastutil/ints/IntList;)I
			ARG 1 minimum
			ARG 2 output
		METHOD m_wyqyvyeg getMaximumCrafts ()I
		METHOD m_xzbczili getRequirement (I)Z
			ARG 1 itemId
		METHOD m_zleeorrf getRequirementIndex (I)I
			ARG 1 itemId
		METHOD m_zxoksdwz getRequirementIndex (ZII)I
			ARG 1 reversed
			ARG 2 itemIndex
			ARG 3 ingredientIndex
