plugins {
	id 'java'
	id 'java-gradle-plugin'
}

repositories {
	mavenCentral()
	maven {
		name "Quilt Repositiory"
		url "https://maven.quiltmc.org/repository/release"
	}
	maven {
		name "Quilt Snapshot Repositiory"
		url "https://maven.quiltmc.org/repository/snapshot"
	}
	maven {
		name "Fabric Repository"
		url 'https://maven.fabricmc.net'
	}
	maven {
		name "Mojang"
		url 'https://libraries.minecraft.net/'
	}
}

configurations {
	proGuard
}

dependencies {
	implementation(libs.commons.io)
	implementation(libs.download.task)
	implementation(libs.guava)
	implementation(libs.jackson.xml)
	implementation(libs.launchermeta.parser)

	implementation(libs.bundles.enigma.full)
	implementation(libs.tiny.remapper)
	implementation(libs.stitch)
	implementation(libs.bundles.unpick.full)
	implementation(libs.mapping.io)
	implementation(libs.javadoc.draftsman)

	// Decompilers
	implementation(libs.cfr)
	implementation(libs.quiltflower)

	// Testing
	testImplementation(libs.junit)
	proGuard(libs.proguard)
}

tasks.register("inputTestJar", Jar.class) {
	from(sourceSets.test.output) {
		include 'quilt/internal/input/**/*.class'
	}

	archiveFileName = 'test-input.jar'
}

tasks.register("inputTestObf", JavaExec.class) {
	dependsOn 'inputTestJar'
	mainClass = 'proguard.ProGuard'
	classpath configurations.proGuard

	args '@src/test/resources/proguard-test.conf', '-injars', inputTestJar.archiveFile.get(),
			'-libraryjars', '<java.home>/jmods',
			'-outjars', file('build/libs/test-input-obf.jar'),
			'-printmapping', file('build/resources/test/obf-mapping.txt')
}

test {
	dependsOn inputTestObf
	useJUnitPlatform()
	enableAssertions = false
}

gradlePlugin {
	plugins {
		mappingsLogic {
			id = 'mappings-logic'
			implementationClass = 'quilt.internal.MappingsPlugin'
		}
	}
}